name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-deploy:
    name: Build and Deploy to Server
    runs-on: ubuntu-latest

    env:
      PROJECT_DIR: /home/joo/back-end-coffee  # 절대 경로로 수정

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. 서버에 배포 (SSH 접속)
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/joo/back-end-coffee
            git config pull.rebase false
            git pull origin main

            # 로그 디렉토리 설정
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S mkdir -p /home/joo/back-end-coffee/django/logs
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S touch /home/joo/back-end-coffee/django/logs/django_error.log
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S chmod -R 777 /home/joo/back-end-coffee/django/logs

            # 백엔드(web)만 빌드 및 재시작 (프론트는 그대로 유지)
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker-compose -f docker-compose-pro.yml build web
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker-compose -f docker-compose-pro.yml up -d web

      # 3. Nginx 서비스 재시작
      - name: Restart Nginx
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/joo/back-end-coffee
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker-compose -f docker-compose-pro.yml restart nginx

