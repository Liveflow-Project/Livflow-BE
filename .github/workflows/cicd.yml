name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-deploy:
    name: Build and Deploy to Server
    runs-on: ubuntu-latest

    env:
      PROJECT_DIR: /home/joo/back-end-coffee  # 절대 경로로 수정

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Python 설정
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # 3. 종속성 설치
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      # 4. 서버에 배포 (SSH 접속)
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/joo/back-end-coffee
            git config pull.rebase false
            git pull origin main
            # 로그 디렉토리 생성 및 권한 설정
            sudo mkdir -p /home/joo/back-end-coffee/django/logs
            sudo touch /home/joo/back-end-coffee/django/logs/django_error.log
            sudo chmod -R 777 /home/joo/back-end-coffee/django/logs
            # Docker Compose로 컨테이너 재시작
            sudo docker-compose -f docker-compose-pro.yml down
            sudo docker-compose -f docker-compose-pro.yml up -d --build --no-cache

            
      # 5. Nginx 서비스 재시작
      - name: Restart Nginx
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/joo/back-end-coffee
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker-compose -f docker-compose-pro.yml restart nginx