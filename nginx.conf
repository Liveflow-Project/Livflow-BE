worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # 백엔드용 upstream 설정
    upstream web_backend {
        server web:8000;
    }

    # Portainer용 upstream 설정
    upstream portainer_backend {
        server portainer:9000;
    }

    # HTTPS 서버 블록 (api.livflow.co.kr)
    server {
        listen 8443 ssl;
        server_name api.livflow.co.kr;

        ssl_certificate /etc/letsencrypt/live/livflow.co.kr/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/livflow.co.kr/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # ✅ OPTIONS 요청을 위한 별도 location 추가
        location / {
            proxy_pass http://web_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # ✅ CORS 관련 헤더 추가
            add_header Access-Control-Allow-Origin "https://www.livflow.co.kr";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-CSRFToken";
            add_header Access-Control-Allow-Credentials "true";
        }

        # ✅ Preflight 요청 처리 (OPTIONS 요청)
        location /api/ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "https://www.livflow.co.kr";
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-CSRFToken";
                add_header Access-Control-Allow-Credentials "true";
                return 204;
            }
        }

        # 정적 파일 제공 (Django STATIC_ROOT)
        location /static/ {
            alias /app/staticfiles/;  # Django collectstatic 결과 경로
            expires 1M;
            access_log off;
        }

        # 미디어 파일 제공 (Django MEDIA_ROOT)
        location /media/ {
            alias /app/media/;
        }

        # Portainer 프록시
        location /portainer/ {
            proxy_pass http://portainer_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_redirect http:// https://;
        }

        # Redoc 경로
        location /redoc/ {
            proxy_pass http://web_backend/redoc/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 오류 페이지 설정
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
